SELECT USER
FROM DUAL;
--SCOTT
/*
   - 사용 계정 : scott 
   - 테이블 : TBL_STUDENT
   - 테이블 구조 : SID		NUMBER		--PK
                  ,NAME		VARCHAR2(30)
                  ,TEL 		VARCHAR2(40)

   - 사용 계정 : scott 
   - 테이블 : TBL_GRADE
   - 테이블 구조 : SID		NUMBER		--PK/FK
                  ,SUB1		NUMBER(3)
                  ,SUB2 	NUMBER(3)
		  ,SUB3         NUMBER(3)

   - 뷰 : STUDENTVIEW
     - 뷰 구조 : SID, NAME, TEL, SUB
                                 --- 참조 레코드 수

   - 뷰 : GRADEVIEW
     - 뷰 구조 : SID, NAME, SUB1, SUB2, SUB3, TOT, AVG, CH
                                              ---  ---  --
                                              총점 평균 등급(합격, 과락, 불합격)

*/
--테이블 생성
CREATE TABLE TBL_STUDENT
(SID    NUMBER
,NAME   VARCHAR2(30)
,TEL    VARCHAR2(40)
,CONSTRAINT STUDENT_SID_PK PRIMARY KEY(SID)
);
--Table TBL_STUDENT이(가) 생성되었습니다.

-- 데이터 입력
INSERT INTO TBL_STUDENT(SID,NAME,TEL)
VALUES(1, '이호석','010-1111-1111');
INSERT INTO TBL_STUDENT(SID,NAME,TEL)
VALUES(2, '최선하','010-2222-2222');
INSERT INTO TBL_STUDENT(SID,NAME,TEL)
VALUES(3, '임소민','010-3333-3333');
INSERT INTO TBL_STUDENT(SID,NAME,TEL)
VALUES(4, '홍은혜','010-4444-4444');
--1 행 이(가) 삽입되었습니다.*4

--실습 테이블 생성
CREATE TABLE TBL_GRADE
(SID    NUMBER
,SUB1   NUMBER(3)
,SUB2   NUMBER(3)
,SUB3   NUMBER(3)
,CONSTRAINT GRADE_SID_PK PRIMARY KEY(SID)
,CONSTRAINT GRADE_SID_FK FOREIGN KEY(SID)
            REFERENCES TBL_STUDENT(SID)
,CONSTRAINT GRADE_SUB1_CK CHECK(SUB1 BETWEEN 0 AND 100)
,CONSTRAINT GRADE_SUB2_CK CHECK(SUB2 BETWEEN 0 AND 100)
,CONSTRAINT GRADE_SUB3_CK CHECK(SUB3 BETWEEN 0 AND 100)
);
--Table TBL_GRADE이(가) 생성되었습니다.

-- 데이터 입력
INSERT INTO TBL_GRADE(SID,SUB1,SUB2,SUB3)
VALUES(1, 90 ,80, 70);
INSERT INTO TBL_GRADE(SID,SUB1,SUB2,SUB3)
VALUES(2, 92 ,82, 72);
INSERT INTO TBL_GRADE(SID,SUB1,SUB2,SUB3)
VALUES(3, 70 ,60, 50);
INSERT INTO TBL_GRADE(SID,SUB1,SUB2,SUB3)
VALUES(4, 74 ,64, 74);
--1 행 이(가) 삽입되었습니다.*4


--확인
SELECT *
FROM TBL_STUDENT;
/*
1	이호석	010-1111-1111
2	최선하	010-2222-2222
3	임소민	010-3333-3333
4	홍은혜	010-4444-4444
*/
SELECT *
FROM TBL_GRADE;
/*
1	90	80	70
2	92	82	72
3	70	60	50
4	74	64	74
*/

--뷰 생성
SELECT SID, NAME, TEL,
       (SELECT COUNT(*)
        FROM TBL_GRADE
        WHERE SID=S.SID) AS SUB
FROM TBL_STUDENT S;

CREATE OR REPLACE VIEW STUDENTVIEW
AS
SELECT SID, NAME, TEL,
       (SELECT COUNT(*)
        FROM TBL_GRADE
        WHERE SID=S.SID) AS SUB
FROM TBL_STUDENT S;
--View STUDENTVIEW이(가) 생성되었습니다.


--뷰 생성
SELECT S.SID AS SID
    , S.NAME AS NAME
    , G.SUB1 AS SUB1
    , G.SUB2 AS SUB2
    , G.SUB3 AS SUB3
    ,(G.SUB1+G.SUB2+G.SUB3) AS TOT
    ,ROUND((G.SUB1+G.SUB2+G.SUB3)/3,1) AS AVG
    ,CASE WHEN ROUND((G.SUB1+G.SUB2+G.SUB3)/3,1)<60 THEN '불합격'
          WHEN (G.SUB1 <= 40) OR (G.SUB2 <= 40) OR (G.SUB3 <= 40) THEN '과락'
          ELSE '합격'
          END AS CH
FROM TBL_GRADE G JOIN TBL_STUDENT S
ON G.SID = S.SID;

CREATE OR REPLACE VIEW GRADEVIEW
AS
SELECT S.SID AS SID
    , S.NAME AS NAME
    , G.SUB1 AS SUB1
    , G.SUB2 AS SUB2
    , G.SUB3 AS SUB3
    ,(G.SUB1+G.SUB2+G.SUB3) AS TOT
    ,ROUND((G.SUB1+G.SUB2+G.SUB3)/3,1) AS AVG
    ,CASE WHEN ROUND((G.SUB1+G.SUB2+G.SUB3)/3,1)<60 THEN '불합격'
          WHEN (G.SUB1 <= 40) OR (G.SUB2 <= 40) OR (G.SUB3 <= 40) THEN '과락'
          ELSE '합격'
          END AS CH
FROM TBL_GRADE G JOIN TBL_STUDENT S
ON G.SID = S.SID;
--View GRADEVIEW이(가) 생성되었습니다.

SELECT SID, NAME, TEL, SUB
FROM STUDENTVIEW;
/*
1	이호석	010-1111-1111	1
2	최선하	010-2222-2222	1
3	임소민	010-3333-3333	1
4	홍은혜	010-4444-4444	1
*/

SELECT SID, NAME, SUB1, SUB2, SUB3, TOT, AVG, CH
FROM GRADEVIEW;
/*
1	이호석	90	80	70	240	80	합격
2	최선하	92	82	72	246	82	합격
3	임소민	70	60	50	180	60	합격
4	홍은혜	74	64	74	212	70.7합격
*/


COMMIT;

SELECT COUNT(*) AS COUNT
FROM TBL_STUDENT;
--4

SELECT *
FROM TBL_STUDENT;

















